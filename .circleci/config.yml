version: 2.1

# -----
# generic yaml anchors (reusable by multiple projects)
# -----
x-references:

  # directories
  directories:
    - &linux_source_dir  /home/circleci/repo

  # container configuration & update
  container_config: &container_config
    working_directory: *linux_source_dir
    shell: /bin/bash -eu
    docker:
      - image: cimg/python:3.8
    environment:
      SOURCE_DIR: *linux_source_dir

# -----
# CircleCI custom commands
# -----
commands:

  # checkout submodules
  submodule_checkout:
    description: Checks out submodules
    steps:
      - run:
          name: Checkout submodules
          command: |
            git submodule sync
            git submodule update --recursive --init

  # common setup (clone, submodules, remote docker, etc.)
  common_setup:
    description: Setup terra environment
    steps:
      - checkout
      - submodule_checkout
      - setup_remote_docker
      - run:
          name: Additional setup
          command: |
            echo 'TERRA_LOCAL=0' >  local.env

            # cimg/python sets COMPOSE_VERSION with conflicts with vsi_common
            echo 'COMPOSE_VERSION=' >> local.env


      # - run:
      #     name: Checkout test data (git-lfs)
      #     command: |
      #       git lfs install
      #       git lfs pull

      - run:
          name: Smuggle repo to remote docker
          command: |
            echo hi > redis_password.secret
            tar zc --exclude .git . | docker run -i -v ${SOURCE_DIR}:/repo -w /repo alpine:3.8 tar zx

  # run "just ci load" command for repository
  # - latest cache is pushed only from main branch of main repo (not forks)
  # - assumes python3 with pip is available
  # - required environment variables
  #     $DOCKER_USER - docker username
  #     $DOCKER_PASS - docker password
  # - optional environment variables
  #   (see https://github.com/VisionSystemsInc/vsi_common/blob/main/linux/just_files/just_ci_functions.bsh)
  #     $JUST_CI_RECIPE_REPO - dockerhub recipe cache (default = "vsiri/ci_cache_recipes")
  #     $JUST_CI_RECIPE_VERSION - version string for recipe cache (default = "")
  #     $JUST_CI_RECIPE_ARGS - additional `ci_load` arguments for recipe cache (default = "--no-push")
  #     $JUST_CI_CACHE_REPO - dockerhub service cache (default = "vsiri/ci_cache")
  #     $JUST_CI_CACHE_VERSION - version string for service cache (default = "")
  #     $JUST_CI_CACHE_ARGS - additional `ci_load` arguments for service cache
  #     $JUST_CI_BRANCH_PUSH - branch (besides main) for dockerhub push
  ci_load:
    description: "Build dockers (ci_load)"
    steps:
      - run:
          name: "Build dockers (ci_load)"
          command: |

            # The new better docker build system, should be faster
            # Doesn't work yet: export DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1

            # ci_load requires python3 with pyyaml
            pip3 install pyyaml

            # dockerhub access
            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"

            # recipe args
            : ${JUST_CI_RECIPE_ARGS="--quiet-pull --no-push"}

            # push only from selected branches of main repo
            if [[ "${CIRCLE_PROJECT_USERNAME,,}" == "visionsystemsinc" && \
                  ("${CIRCLE_BRANCH}" == "main" || \
                   "${CIRCLE_BRANCH}" == "${JUST_CI_BRANCH_PUSH-}") ]]
            then
              : ${JUST_CI_CACHE_ARGS="--quiet-pull --push"}
            else
              : ${JUST_CI_CACHE_ARGS="--quiet-pull --no-push"}
            fi

            # export local variables
            export JUST_CI_RECIPE_ARGS
            export JUST_CI_CACHE_ARGS

            # ci_load
            source setup.env
            just ci load

# -----
# CircleCI jobs
# -----
jobs:
  run_tests:
    <<: *container_config
    steps:
      - common_setup
      - ci_load

      - run:
          name: Running test code
          # no_output_timeout: 30m
          command: |
            source setup.env
            just terra test ${CIRCLE_CI_TEST_FLAGS-}

      - run:
          name: Check pep8 compliance
          command: |
            source setup.env
            # This is faster than pipenv sync --dev. pyzmq (via ipykernel)
            # wastes several minutes, and I don't need it
            just terra pipenv run pip install autopep8 flake8
            just terra pep8

  compile_docs:
    <<: *container_config
    steps:
      - common_setup

      - run:
          name: Generate docs
          command: |
            . setup.env
            SPHINXOPTS='-W --keep-going' just sphinx build compile -n --all
      - run:
          name: Smuggle docs back from remote docker
          command: |
            docker run --rm -v ${SOURCE_DIR}:/repo -w /repo alpine:3.8 tar c ./docs/_build/html | tar x

      - persist_to_workspace:
          root: docs/_build
          paths: html


  deploy_docs:
    <<: *container_config
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/docs
      - run:
          name: Checkout gh-pages and update
          command: |
            git checkout gh-pages || git checkout --orphan gh-pages
            find . -maxdepth 1 -path ./.git -prune -o -name . -o  -exec rm -rf {} +
            mv /tmp/docs/html/* ./
            touch .nojekyll

            git add --all
            if [ "$(git status --porcelain -uno | wc -l)" != "0" ]; then
              git config --global user.email "circleci@cirleci.com" > /dev/null 2>&1
              git config --global user.name "CircleCI" > /dev/null 2>&1
              git commit -m "Autobuild documentation [ci skip]"
              git remote set-url origin "https://${GH_NAME}:${GH_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git"
              git push origin gh-pages
            fi

# -----
# CircleCI workflows
# -----
workflows:
  terra:
    jobs:
      - run_tests
      - compile_docs
      - deploy_docs:
          requires:
            - compile_docs
          filters:
            branches:
              only:
                - main
